{"version": 1.0, "query": "class ShowCalls(hxtb.query_function_t):\n    def __init__(self):\n        self.ea = idaapi.get_screen_ea()\n\n    def _get_xrefs(self):\n        from idautils import CodeRefsTo\n        ea_list = []\n        for xea in CodeRefsTo(self.ea, 1):\n            xf = idaapi.get_func(xea)\n            if xf:\n                ea_list.append(xf.start_ea)\n        # remove duplicates\n        ea_list = list(dict.fromkeys(ea_list))\n        return ea_list\n\n    def init(self):\n        return self.ea != idaapi.BADADDR\n               \n    def run(self, f, i):\n        return (i.op is idaapi.cot_call and\n        i.x.op is idaapi.cot_obj and\n        i.x.obj_ea == self.ea)\n        \n    def exit(self):\n        return\n\n    def get_scope(self):\n        return self._get_xrefs()\n\nreturn ShowCalls()", "query_type": 0, "ast_type": 0, "help": "show calls and arguments to current identifier", "scope": 3, "type": 1}